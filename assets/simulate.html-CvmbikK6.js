import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,o as s,a,b as e,e as t}from"./app-C_yA8x_5.js";const o={},i=a('<p>本页面将简要介绍模拟算法。</p><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p>模拟就是用计算机来模拟题目中要求的操作。</p><p>模拟题目通常具有码量大、操作多、思路繁复的特点。由于它码量大，经常会出现难以查错的情况，如果在考试中写错是相当浪费时间的。</p><h2 id="技巧" tabindex="-1"><a class="header-anchor" href="#技巧"><span>技巧</span></a></h2><p>写模拟题时，遵循以下的建议有可能会提升做题速度：</p><ul><li>在动手写代码之前，在草纸上尽可能地写好要实现的流程。</li><li>在代码中，尽量把每个部分模块化，写成函数、结构体或类。</li><li>对于一些可能重复用到的概念，可以统一转化，方便处理：如，某题给你 &quot;YY-MM-DD 时：分&quot; 把它抽取到一个函数，处理成秒，会减少概念混淆。</li><li>调试时分块调试。模块化的好处就是可以方便的单独调某一部分。</li><li>写代码的时候一定要思路清晰，不要想到什么写什么，要按照落在纸上的步骤写。</li></ul><p>实际上，上述步骤在解决其它类型的题目时也是很有帮助的。</p><h2 id="例题详解" tabindex="-1"><a class="header-anchor" href="#例题详解"><span>例题详解</span></a></h2>',9),r=e("p",null,[t('???+ note "'),e("a",{href:"https://open.kattis.com/problems/climbingworm",target:"_blank",rel:"noopener noreferrer"},"Climbing Worm"),t('"'),e("br"),t(" 一只长度不计的蠕虫位于 "),e("span",{class:"katex"},[e("span",{class:"katex-mathml"},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("semantics",null,[e("mrow",null,[e("mi",null,"n")]),e("annotation",{encoding:"application/x-tex"},"n")])])]),e("span",{class:"katex-html","aria-hidden":"true"},[e("span",{class:"base"},[e("span",{class:"strut",style:{height:"0.4306em"}}),e("span",{class:"mord mathnormal"},"n")])])]),t(" 英寸深的井的底部。它每次向上爬 "),e("span",{class:"katex"},[e("span",{class:"katex-mathml"},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("semantics",null,[e("mrow",null,[e("mi",null,"u")]),e("annotation",{encoding:"application/x-tex"},"u")])])]),e("span",{class:"katex-html","aria-hidden":"true"},[e("span",{class:"base"},[e("span",{class:"strut",style:{height:"0.4306em"}}),e("span",{class:"mord mathnormal"},"u")])])]),t(" 英寸，但是必须休息一次才能再次向上爬。在休息的时候，它滑落了 "),e("span",{class:"katex"},[e("span",{class:"katex-mathml"},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("semantics",null,[e("mrow",null,[e("mi",null,"d")]),e("annotation",{encoding:"application/x-tex"},"d")])])]),e("span",{class:"katex-html","aria-hidden":"true"},[e("span",{class:"base"},[e("span",{class:"strut",style:{height:"0.6944em"}}),e("span",{class:"mord mathnormal"},"d")])])]),t(" 英寸。之后它将重复向上爬和休息的过程。蠕虫爬出井口需要至少爬多少次？如果蠕虫爬完后刚好到达井的顶部，我们也设作蠕虫已经爬出井口。")],-1),p=a('<p>??? note &quot;解题思路&quot;<br> 直接使用程序模拟蠕虫爬井的过程就可以了。用一个循环重复蠕虫的爬井过程，当攀爬的长度超过或者等于井的深度时跳出。</p><p>??? note &quot;参考代码&quot;<br> === &quot;C++&quot;<br><code>cpp --8&lt;-- &quot;docs/basic/code/simulate/simulate_1.cpp&quot; </code></p><pre><code>=== &quot;Python&quot;\n    ```python\n    --8&lt;-- &quot;docs/basic/code/simulate/simulate_1.py&quot;\n    ```\n\n=== &quot;Java&quot;\n    ```java\n    --8&lt;-- &quot;docs/basic/code/simulate/simulate_1.java&quot;\n    ```\n</code></pre><h2 id="习题" tabindex="-1"><a class="header-anchor" href="#习题"><span>习题</span></a></h2><ul><li><a href="https://uoj.ac/problem/15" target="_blank" rel="noopener noreferrer">「NOIP2014」生活大爆炸版石头剪刀布 - Universal Online Judge</a></li><li><a href="http://bailian.openjudge.cn/practice/3750/" target="_blank" rel="noopener noreferrer">「OpenJudge 3750」魔兽世界</a></li><li><a href="https://loj.ac/problem/2885" target="_blank" rel="noopener noreferrer">「SDOI2010」猪国杀 - LibreOJ</a></li></ul>',5),c=[i,r,p];function m(h,d){return s(),n("div",null,c)}const b=l(o,[["render",m],["__file","simulate.html.vue"]]),_=JSON.parse('{"path":"/algorithms/sort/simulate.html","title":"","lang":"zh-CN","frontmatter":{"description":"本页面将简要介绍模拟算法。 简介 模拟就是用计算机来模拟题目中要求的操作。 模拟题目通常具有码量大、操作多、思路繁复的特点。由于它码量大，经常会出现难以查错的情况，如果在考试中写错是相当浪费时间的。 技巧 写模拟题时，遵循以下的建议有可能会提升做题速度： 在动手写代码之前，在草纸上尽可能地写好要实现的流程。 在代码中，尽量把每个部分模块化，写成函数、结...","head":[["meta",{"property":"og:url","content":"https://leslie-dd.github.io/leslie-blog/leslie-blog/algorithms/sort/simulate.html"}],["meta",{"property":"og:site_name","content":"Leslie的博客"}],["meta",{"property":"og:description","content":"本页面将简要介绍模拟算法。 简介 模拟就是用计算机来模拟题目中要求的操作。 模拟题目通常具有码量大、操作多、思路繁复的特点。由于它码量大，经常会出现难以查错的情况，如果在考试中写错是相当浪费时间的。 技巧 写模拟题时，遵循以下的建议有可能会提升做题速度： 在动手写代码之前，在草纸上尽可能地写好要实现的流程。 在代码中，尽量把每个部分模块化，写成函数、结..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-19T07:24:37.000Z"}],["meta",{"property":"article:author","content":"DYF"}],["meta",{"property":"article:modified_time","content":"2024-04-19T07:24:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-19T07:24:37.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"DYF\\",\\"url\\":\\"https://mrhope.site\\"}]}"]]},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"技巧","slug":"技巧","link":"#技巧","children":[]},{"level":2,"title":"例题详解","slug":"例题详解","link":"#例题详解","children":[]},{"level":2,"title":"习题","slug":"习题","link":"#习题","children":[]}],"git":{"createdTime":1713511477000,"updatedTime":1713511477000,"contributors":[{"name":"Leslie","email":"LeslieDYF@gmail.com","commits":1}]},"readingTime":{"minutes":1.76,"words":528},"filePathRelative":"algorithms/sort/simulate.md","localizedDate":"2024年4月19日","excerpt":"<p>本页面将简要介绍模拟算法。</p>\\n<h2>简介</h2>\\n<p>模拟就是用计算机来模拟题目中要求的操作。</p>\\n<p>模拟题目通常具有码量大、操作多、思路繁复的特点。由于它码量大，经常会出现难以查错的情况，如果在考试中写错是相当浪费时间的。</p>\\n<h2>技巧</h2>\\n<p>写模拟题时，遵循以下的建议有可能会提升做题速度：</p>\\n<ul>\\n<li>在动手写代码之前，在草纸上尽可能地写好要实现的流程。</li>\\n<li>在代码中，尽量把每个部分模块化，写成函数、结构体或类。</li>\\n<li>对于一些可能重复用到的概念，可以统一转化，方便处理：如，某题给你 \\"YY-MM-DD 时：分\\" 把它抽取到一个函数，处理成秒，会减少概念混淆。</li>\\n<li>调试时分块调试。模块化的好处就是可以方便的单独调某一部分。</li>\\n<li>写代码的时候一定要思路清晰，不要想到什么写什么，要按照落在纸上的步骤写。</li>\\n</ul>","autoDesc":true}');export{b as comp,_ as data};
