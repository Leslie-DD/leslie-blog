import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as i,c,d as r,w as t,b as l,e,o as a}from"./app-6wjV0JsH.js";const s={},p=l("table",null,[l("thead",null,[l("tr",null,[l("th",null,"表达式"),l("th",null,"描述")])]),l("tbody",null,[l("tr",null,[l("td",null,[l("code",null,"[abc]")]),l("td",null,"字符集。匹配集合中所含的任一字符。")]),l("tr",null,[l("td",null,[l("code",null,"[^abc]")]),l("td",null,"否定字符集。匹配任何不在集合中的字符。")]),l("tr",null,[l("td",null,[l("code",null,"[a-z]")]),l("td",null,"字符范围。匹配指定范围内的任意字符。")]),l("tr",null,[l("td",null,[l("code",null,".")]),l("td",null,"匹配除换行符以外的任何单个字符。")]),l("tr",null,[l("td",null,[l("code",null,"\\ ")]),l("td",null,"转义字符。")]),l("tr",null,[l("td",null,[l("code",null,"\\w")]),l("td",null,[e("匹配任何字母数字，包括下划线（等价于"),l("code",null,"[A-Za-z0-9_]"),e("）。")])]),l("tr",null,[l("td",null,[l("code",null,"\\W")]),l("td",null,[e("匹配任何非字母数字（等价于"),l("code",null,"[^A-Za-z0-9_]"),e("）。")])]),l("tr",null,[l("td",null,[l("code",null,"\\d")]),l("td",null,"数字。匹配任何数字。")]),l("tr",null,[l("td",null,[l("code",null,"\\D")]),l("td",null,"非数字。匹配任何非数字字符。")]),l("tr",null,[l("td",null,[l("code",null,"\\s")]),l("td",null,"空白。匹配任何空白字符，包括空格、制表符等。")]),l("tr",null,[l("td",null,[l("code",null,"\\S")]),l("td",null,"非空白。匹配任何非空白字符。")])])],-1),h=l("table",null,[l("thead",null,[l("tr",null,[l("th",null,"表达式"),l("th",null,"描述")])]),l("tbody",null,[l("tr",null,[l("td",null,[l("code",null,"(expression)")]),l("td",null,"分组。匹配括号里的整个表达式。")]),l("tr",null,[l("td",null,[l("code",null,"(?:expression)")]),l("td",null,"非捕获分组。匹配括号里的整个字符串但不获取匹配结果，拿不到分组引用。")]),l("tr",null,[l("td",null,[l("code",null,"\\num")]),l("td",null,[e("对前面所匹配分组的引用。比如"),l("code",null,"(\\d)\\1"),e("可以匹配两个相同的数字，"),l("code",null,"(Code)(Sheep)\\1\\2"),e("则可以匹配"),l("code",null,"CodeSheepCodeSheep"),e("。")])])])],-1),m=l("table",null,[l("thead",null,[l("tr",null,[l("th",null,"表达式"),l("th",null,"描述")])]),l("tbody",null,[l("tr",null,[l("td",null,[l("code",null,"^")]),l("td",null,"匹配字符串或行开头。")]),l("tr",null,[l("td",null,[l("code",null,"$")]),l("td",null,"匹配字符串或行结尾。")]),l("tr",null,[l("td",null,[l("code",null,"\\b")]),l("td",null,[e("匹配单词边界。比如"),l("code",null,"Sheep\\b``可以匹配``CodeSheep"),e("末尾的"),l("code",null,"Sheep"),e("，不能匹配"),l("code",null,"CodeSheepCode"),e("中的"),l("code",null,"Sheep")])]),l("tr",null,[l("td",null,[l("code",null,"\\B")]),l("td",null,[e("匹配非单词边界。比如"),l("code",null,"Code\\B"),e("可以匹配"),l("code",null,"HelloCodeSheep"),e("中的"),l("code",null,"Code"),e("，不能匹配"),l("code",null,"HelloCode"),e("中的"),l("code",null,"Code"),e("。")])])])],-1),g=l("table",null,[l("thead",null,[l("tr",null,[l("th",null,"表达式"),l("th",null,"描述")])]),l("tbody",null,[l("tr",null,[l("td",null,[l("code",null,"?")]),l("td",null,"匹配前面的表达式0个或1个。即表示可选项。")]),l("tr",null,[l("td",null,[l("code",null,"+")]),l("td",null,"匹配前面的表达式至少1个。")]),l("tr",null,[l("td",null,[l("code",null,"*")]),l("td",null,"匹配前面的表达式0个或多个。")]),l("tr",null,[l("td",null,[l("code",null,"|")]),l("td",null,"或运算符。并集，可以匹配符号前后的表达式。")]),l("tr",null,[l("td",null,[l("code",null,"{m}")]),l("td",null,"匹配前面的表达式m个。")]),l("tr",null,[l("td",null,[l("code",null,"{m,}")]),l("td",null,"匹配前面的表达式最少m个。")]),l("tr",null,[l("td",null,[l("code",null,"{m,n}")]),l("td",null,"匹配前面的表达式最少m个，最多n个。")])])],-1),b=l("table",null,[l("thead",null,[l("tr",null,[l("th",null,"表达式"),l("th",null,"描述")])]),l("tbody",null,[l("tr",null,[l("td",null,[l("code",null,"(?=)")]),l("td",null,[e("正向预查。比如"),l("code",null,"Code(?=Sheep)"),e("能匹配"),l("code",null,"CodeSheep"),e("中的"),l("code",null,"Code"),e("，但不能匹配"),l("code",null,"CodePig"),e("中的"),l("code",null,"Code"),e("。")])]),l("tr",null,[l("td",null,[l("code",null,"(?!)")]),l("td",null,[e("正向否定预查。比如"),l("code",null,"Code(?!Sheep)"),e("不能匹配"),l("code",null,"CodeSheep"),e("中的"),l("code",null,"Code"),e("，但能匹配"),l("code",null,"CodePig"),e("中的"),l("code",null,"Code"),e("。")])]),l("tr",null,[l("td",null,[l("code",null,"(?<=)")]),l("td",null,[e("反向预查。比如"),l("code",null,"(?<=Code)Sheep"),e("能匹配"),l("code",null,"CodeSheep"),e("中的"),l("code",null,"Sheep"),e("，但不能匹配"),l("code",null,"ReadSheep"),e("中的"),l("code",null,"Sheep"),e("。")])]),l("tr",null,[l("td",null,[l("code",null,"(?<!)")]),l("td",null,[e("反向否定预查。比如"),l("code",null,"(?<!Code)Sheep"),e("不能匹配"),l("code",null,"CodeSheep"),e("中的"),l("code",null,"Sheep"),e("，但能匹配"),l("code",null,"ReadSheep"),e("中的"),l("code",null,"Sheep"),e("。")])])])],-1),_=l("table",null,[l("thead",null,[l("tr",null,[l("th",null,"表达式"),l("th",null,"描述")])]),l("tbody",null,[l("tr",null,[l("td",null,[l("code",null,"/.../i")]),l("td",null,"忽略大小写")]),l("tr",null,[l("td",null,[l("code",null,"/.../g")]),l("td",null,"全局匹配。")]),l("tr",null,[l("td",null,[l("code",null,"/.../m")]),l("td",null,"多行修饰符。用于多行匹配。")])])],-1),v=l("div",null,[e(" 请输入正则表达式： "),l("input",{type:"text",autocomplete:"off",id:"regexInput",placeholder:"请在此输入或粘贴正则表达式",style:{width:"40%"}}),l("button",{onclick:"visualizeFunc()",style:{"background-color":"lightgreen"}},"可视化查询")],-1),x=l("p",{id:"visualizeTips"},null,-1),C=l("div",{id:"regex"},[l("iframe",{id:"regexChart",frameborder:"0",src:"https://jex.im/regulex/#!embed=true&flags=&re=%5E(a%7Cb)*%3F%24"})],-1);function y(S,f){const d=i("Tabs");return a(),c("div",null,[r(d,{id:"0",data:[{id:"字符"},{id:"分组和引用"},{id:"锚点/边界"},{id:"数量表示"},{id:"预查断言"},{id:"特殊标志"}],"tab-id":"regex"},{title0:t(({value:n,isActive:u})=>[e("字符")]),title1:t(({value:n,isActive:u})=>[e("分组和引用")]),title2:t(({value:n,isActive:u})=>[e("锚点/边界")]),title3:t(({value:n,isActive:u})=>[e("数量表示")]),title4:t(({value:n,isActive:u})=>[e("预查断言")]),title5:t(({value:n,isActive:u})=>[e("特殊标志")]),tab0:t(({value:n,isActive:u})=>[p]),tab1:t(({value:n,isActive:u})=>[h]),tab2:t(({value:n,isActive:u})=>[m]),tab3:t(({value:n,isActive:u})=>[g]),tab4:t(({value:n,isActive:u})=>[b]),tab5:t(({value:n,isActive:u})=>[_]),_:1}),v,x,C])}const R=o(s,[["render",y],["__file","regex.html.vue"]]),z=JSON.parse('{"path":"/tutorial/regex.html","title":"Regex (Regular Expression)","lang":"zh-CN","frontmatter":{"title":"Regex (Regular Expression)","author":"Leslie D","date":"2022-08-21T00:00:00.000Z","editLink":false,"comment":false,"description":"请输入正则表达式： 可视化查询","head":[["meta",{"property":"og:url","content":"https://leslie-dd.github.io/leslie-blog/leslie-blog/tutorial/regex.html"}],["meta",{"property":"og:site_name","content":"Leslie的博客"}],["meta",{"property":"og:title","content":"Regex (Regular Expression)"}],["meta",{"property":"og:description","content":"请输入正则表达式： 可视化查询"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-15T15:31:24.000Z"}],["meta",{"property":"article:author","content":"Leslie D"}],["meta",{"property":"article:published_time","content":"2022-08-21T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-15T15:31:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Regex (Regular Expression)\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-08-21T00:00:00.000Z\\",\\"dateModified\\":\\"2024-10-15T15:31:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Leslie D\\"}]}"]]},"headers":[],"git":{"createdTime":1664720147000,"updatedTime":1729006284000,"contributors":[{"name":"Leslie","email":"LeslieDYF@gmail.com","commits":2}]},"readingTime":{"minutes":2.33,"words":698},"filePathRelative":"tutorial/regex.md","localizedDate":"2022年8月21日","excerpt":"\\n<div>\\n请输入正则表达式：\\n  <input type=\\"text\\" autocomplete=\\"off\\" id=\\"regexInput\\" placeholder=\\"请在此输入或粘贴正则表达式\\" style=\\"width:40%\\">\\n  <button onclick=\\"visualizeFunc()\\" style=\\"background-color:lightgreen\\">可视化查询</button>\\n</div>\\n<p id=\\"visualizeTips\\"></p>\\n<div id=\\"regex\\">\\n    <iframe id=\\"regexChart\\" frameborder=\\"0\\" src=\\"https://jex.im/regulex/#!embed=true&amp;flags=&amp;re=%5E(a%7Cb)*%3F%24\\"></iframe>\\n</div>","autoDesc":true}');export{R as comp,z as data};
