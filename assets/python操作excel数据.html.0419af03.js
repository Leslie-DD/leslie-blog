import{_ as p}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as e,c as o,b as n,d as s,e as t,f as c,r as l}from"./app.44de0484.js";const i={},u=n("h1",{id:"python\u5904\u7406excel\u6570\u636E",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#python\u5904\u7406excel\u6570\u636E","aria-hidden":"true"},"#"),s(" Python\u5904\u7406Excel\u6570\u636E")],-1),r=n("blockquote",null,[n("p",null,"\u8FD9\u4E24\u5929\u665A\u4E0A\u5E2E\u5B66\u7ECF\u6D4E\u7684\u513F\u5B50\u4ECE\u4E24\u4E2Aexcel\u8868\u4E2D\u63D0\u53D6\u4E86\u4E9B\u6570\u636E\u4F9B\u4ED6\u505A\u6570\u636E\u5206\u6790\u3002"),n("p",null,"\u7B2C\u4E00\u6B21\u7528python\u64CD\u4F5Cexcel\u8868\uFF0C\u8BB0\u5F55\u4E00\u4E0B\u3002"),n("p",null,"\u5355\u7EAF\u8BFB\u53D6\u5199\u5165excel\u6570\u636E\u4E0D\u96BE\uFF0C\u5173\u952E\u662F\u5BF9\u6570\u636E\u53C8\u8FDB\u4E00\u6B65\u63D0\u53D6\u4E86\u6709\u6548\u503C\u3002")],-1),k={href:"/scripts/lzs/%E8%B0%83%E7%A0%94%E6%95%B0%E6%8D%AE.xlsx",target:"_blank",rel:"noopener noreferrer"},d={href:"/scripts/lzs/%E9%A2%84%E6%B5%8B%E4%BF%A1%E6%81%AF1.xlsx",target:"_blank",rel:"noopener noreferrer"},v={href:"/scripts/lzs/%E9%A2%84%E6%B5%8B%E4%BF%A1%E6%81%AF2.xlsx",target:"_blank",rel:"noopener noreferrer"},m={href:"/scripts/lzs/%E9%A2%84%E6%B5%8B%E4%BF%A1%E6%81%AF3.xlsx",target:"_blank",rel:"noopener noreferrer"},b={href:"/scripts/lzs/lzs.py",target:"_blank",rel:"noopener noreferrer"},_=c(`<div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">from</span> functools <span class="token keyword">import</span> <span class="token builtin">reduce</span>
<span class="token keyword">from</span> logging<span class="token punctuation">.</span>config <span class="token keyword">import</span> valid_ident
<span class="token keyword">from</span> multiprocessing <span class="token keyword">import</span> allow_connection_pickling
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">import</span> time
<span class="token keyword">import</span> re
<span class="token keyword">import</span> copy


<span class="token keyword">def</span> <span class="token function">printList</span><span class="token punctuation">(</span>print_list<span class="token punctuation">)</span><span class="token punctuation">:</span>
   count <span class="token operator">=</span> <span class="token number">1</span>   
   <span class="token keyword">for</span> result <span class="token keyword">in</span> print_list<span class="token punctuation">:</span>
       <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;     &quot;</span><span class="token punctuation">,</span> count<span class="token punctuation">,</span> result<span class="token punctuation">)</span>
       count <span class="token operator">=</span> count <span class="token operator">+</span> <span class="token number">1</span>
<span class="token keyword">def</span> <span class="token function">deleteDuplicate</span><span class="token punctuation">(</span>li<span class="token punctuation">)</span><span class="token punctuation">:</span>
   func <span class="token operator">=</span> <span class="token keyword">lambda</span> x<span class="token punctuation">,</span> y<span class="token punctuation">:</span> x <span class="token keyword">if</span> y <span class="token keyword">in</span> x <span class="token keyword">else</span> x <span class="token operator">+</span> <span class="token punctuation">[</span>y<span class="token punctuation">]</span>
   li <span class="token operator">=</span> <span class="token builtin">reduce</span><span class="token punctuation">(</span>func<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">]</span> <span class="token operator">+</span> li<span class="token punctuation">)</span>
   <span class="token keyword">return</span> li

<span class="token keyword">def</span> <span class="token function">export_excel</span><span class="token punctuation">(</span>export<span class="token punctuation">,</span> file_name<span class="token punctuation">)</span><span class="token punctuation">:</span>
   <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\u8F93\u51FA\u7ED3\u679C\u5230\u300A%s\u300B...&quot;</span><span class="token operator">%</span><span class="token punctuation">(</span>file_name<span class="token punctuation">)</span><span class="token punctuation">)</span>
   <span class="token comment">#\u5C06\u5B57\u5178\u5217\u8868\u8F6C\u6362\u4E3ADataFrame</span>
   pf <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span>export<span class="token punctuation">)</span><span class="token punctuation">)</span>
   <span class="token comment">#\u6307\u5B9A\u5B57\u6BB5\u987A\u5E8F</span>
   order <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Stkcd&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Ananm&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;InstitutionID&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Brokern&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;YEAR&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;count&#39;</span><span class="token punctuation">]</span>
   pf <span class="token operator">=</span> pf<span class="token punctuation">[</span>order<span class="token punctuation">]</span>
   <span class="token comment">#\u5C06\u5217\u540D\u66FF\u6362\u4E3A\u4E2D\u6587</span>
   columns_map <span class="token operator">=</span> <span class="token punctuation">{</span>
       <span class="token string">&#39;Stkcd&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;Stkcd&#39;</span><span class="token punctuation">,</span>
       <span class="token string">&#39;Ananm&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;Ananm&#39;</span><span class="token punctuation">,</span>
       <span class="token string">&#39;InstitutionID&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;InstitutionID&#39;</span><span class="token punctuation">,</span>
       <span class="token string">&#39;Brokern&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;Brokern&#39;</span><span class="token punctuation">,</span>
       <span class="token string">&#39;YEAR&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;YEAR&#39;</span><span class="token punctuation">,</span>
       <span class="token string">&#39;count&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;count&#39;</span>
   <span class="token punctuation">}</span>
   pf<span class="token punctuation">.</span>rename<span class="token punctuation">(</span>columns <span class="token operator">=</span> columns_map<span class="token punctuation">,</span>inplace <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">)</span>
   <span class="token comment">#\u6307\u5B9A\u751F\u6210\u7684Excel\u8868\u683C\u540D\u79F0</span>
   file_path <span class="token operator">=</span> pd<span class="token punctuation">.</span>ExcelWriter<span class="token punctuation">(</span>file_name<span class="token punctuation">)</span>
   <span class="token comment">#\u66FF\u6362\u7A7A\u5355\u5143\u683C</span>
   pf<span class="token punctuation">.</span>fillna<span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">,</span>inplace <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">)</span>
   <span class="token comment">#\u8F93\u51FA</span>
   pf<span class="token punctuation">.</span>to_excel<span class="token punctuation">(</span>file_path<span class="token punctuation">,</span>encoding <span class="token operator">=</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">,</span>index <span class="token operator">=</span> <span class="token boolean">False</span><span class="token punctuation">)</span>
   <span class="token comment">#\u4FDD\u5B58\u8868\u683C</span>
   file_path<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token punctuation">)</span>
   <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\u8F93\u51FA\u7ED3\u679C\u6210\u529F&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> __name__<span class="token operator">==</span><span class="token string">&quot;__main__&quot;</span><span class="token punctuation">:</span>
   <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\u8BFB\u53D6\u300A\u8C03\u7814\u6570\u636E.xlsx\u300B...&quot;</span><span class="token punctuation">)</span>
   all_start <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>
   df0 <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span><span class="token string">&#39;\u8C03\u7814\u6570\u636E.xlsx&#39;</span><span class="token punctuation">)</span>
   <span class="token comment"># print(df0)</span>
   all_list <span class="token operator">=</span> df0<span class="token punctuation">.</span>to_dict<span class="token punctuation">(</span>orient<span class="token operator">=</span><span class="token string">&#39;records&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">]</span>
   result_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
   <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>all_list<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
       <span class="token builtin">all</span> <span class="token operator">=</span> all_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
       researcher_list <span class="token operator">=</span> <span class="token builtin">all</span><span class="token punctuation">[</span><span class="token string">&#39;Researcher&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;;&#39;</span><span class="token punctuation">)</span>
       <span class="token keyword">for</span> researcher <span class="token keyword">in</span> researcher_list<span class="token punctuation">:</span>
           semicolon_index <span class="token operator">=</span> researcher<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&#39;:&#39;</span><span class="token punctuation">)</span>
           <span class="token keyword">if</span> semicolon_index <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>
               researcher <span class="token operator">=</span> researcher<span class="token punctuation">[</span>semicolon_index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>
               researchers <span class="token operator">=</span> researcher<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;\u3001&quot;</span><span class="token punctuation">)</span>
               
               <span class="token keyword">for</span> research <span class="token keyword">in</span> researchers<span class="token punctuation">:</span>
                   all_copy <span class="token operator">=</span> <span class="token builtin">all</span><span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span>
                   all_copy<span class="token punctuation">[</span><span class="token string">&#39;Researcher&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> research<span class="token punctuation">;</span>
                   result_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>all_copy<span class="token punctuation">)</span>
                   <span class="token comment"># print(len(result_list), research, result_list[len(result_list)-1])</span>
           <span class="token keyword">else</span> <span class="token punctuation">:</span>
               all_copy <span class="token operator">=</span> <span class="token builtin">all</span><span class="token punctuation">;</span>
               all_copy<span class="token punctuation">[</span><span class="token string">&#39;Researcher&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> researcher<span class="token punctuation">;</span>
               result_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>all_copy<span class="token punctuation">)</span>
               <span class="token comment"># print(len(result_list), researcher, result_list[len(result_list)-1])</span>
   <span class="token comment"># printList(result_list)</span>
   <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\u8BFB\u53D6\u300A\u8C03\u7814\u6570\u636E\u521D\u59CB\u5316\u300B\u5171[%d]\u6761\u6570\u636E&quot;</span> <span class="token operator">%</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>result_list<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

   file_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
   file_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">&#39;\u9884\u6D4B\u4FE1\u606F1.xlsx&#39;</span><span class="token punctuation">)</span>
   file_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">&#39;\u9884\u6D4B\u4FE1\u606F2.xlsx&#39;</span><span class="token punctuation">)</span>
   file_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">&#39;\u9884\u6D4B\u4FE1\u606F3.xlsx&#39;</span><span class="token punctuation">)</span>
   <span class="token keyword">for</span> <span class="token builtin">file</span> <span class="token keyword">in</span> file_list<span class="token punctuation">:</span>
       start <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>
       <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
       <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\u8BFB\u53D6\u300A%s\u300B...&quot;</span> <span class="token operator">%</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
       df0 <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">)</span>
       <span class="token comment"># print(df1)</span>
       data_list <span class="token operator">=</span> df0<span class="token punctuation">.</span>to_dict<span class="token punctuation">(</span>orient<span class="token operator">=</span><span class="token string">&#39;records&#39;</span><span class="token punctuation">)</span>
       <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\u8BFB\u53D6\u300A%s\u300B\u5171[%d]\u6761\u6570\u636E\uFF0C\u5F00\u59CB\u7EDF\u8BA1...&quot;</span> <span class="token operator">%</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>data_list<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

       count <span class="token operator">=</span> <span class="token number">0</span>
       <span class="token keyword">for</span> data <span class="token keyword">in</span> data_list<span class="token punctuation">:</span>
           data<span class="token punctuation">[</span><span class="token string">&#39;count&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>
           <span class="token comment"># print(count / len(data_list))</span>
           count <span class="token operator">=</span> count <span class="token operator">+</span> <span class="token number">1</span>
           <span class="token keyword">for</span> result <span class="token keyword">in</span> result_list<span class="token punctuation">:</span>
               <span class="token keyword">if</span> result<span class="token punctuation">[</span><span class="token string">&#39;Researcher&#39;</span><span class="token punctuation">]</span> <span class="token keyword">in</span> <span class="token builtin">str</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token string">&#39;Ananm&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                   data<span class="token punctuation">[</span><span class="token string">&#39;count&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token string">&#39;count&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>
       export_excel<span class="token punctuation">(</span>data_list<span class="token punctuation">,</span> <span class="token string">&quot;result_%s&quot;</span><span class="token operator">%</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

       valid_count <span class="token operator">=</span> <span class="token number">0</span>
       <span class="token keyword">for</span> data <span class="token keyword">in</span> data_list<span class="token punctuation">:</span>
           <span class="token keyword">if</span> data<span class="token punctuation">[</span><span class="token string">&#39;count&#39;</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>
               valid_count <span class="token operator">=</span> valid_count <span class="token operator">+</span> <span class="token number">1</span>
               <span class="token comment"># if (valid_count &lt; 100) :</span>
               <span class="token comment">#     print(data)</span>
                   <span class="token comment"># print (data[&#39;Stkcd&#39;], data[&#39;Ananm&#39;], data[&#39;Brokern&#39;], data[&#39;InstitutionID&#39;], data[&#39;YEAR&#39;], data[&#39;count&#39;])</span>
       <span class="token keyword">print</span><span class="token punctuation">(</span> <span class="token string">&quot;\u6709\u6548\u6570\u636E(count &gt; 0)[%d]\u6761\uFF0C\u8017\u65F6[%.3fs]&quot;</span><span class="token operator">%</span><span class="token punctuation">(</span>valid_count<span class="token punctuation">,</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> start<span class="token punctuation">)</span><span class="token punctuation">)</span>
   <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
   <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\u603B\u8017\u65F6[%d]s&quot;</span><span class="token operator">%</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> all_start<span class="token punctuation">)</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function f(y,g){const a=l("ExternalLinkIcon");return e(),o("div",null,[u,r,n("p",null,[n("a",k,[s("\u8C03\u7814\u6570\u636E.xlsx"),t(a)])]),n("p",null,[n("a",d,[s("\u9884\u6D4B\u4FE1\u606F1.xlsx"),t(a)])]),n("p",null,[n("a",v,[s("\u9884\u6D4B\u4FE1\u606F2.xlsx"),t(a)])]),n("p",null,[n("a",m,[s("\u9884\u6D4B\u4FE1\u606F3.xlsx"),t(a)])]),n("p",null,[n("a",b,[s("lzs.py"),t(a)])]),_])}const h=p(i,[["render",f],["__file","python\u64CD\u4F5Cexcel\u6570\u636E.html.vue"]]);export{h as default};
